"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_app_posts_implementing-consistent-hashing_page_mdx";
exports.ids = ["_rsc_src_app_posts_implementing-consistent-hashing_page_mdx"];
exports.modules = {

/***/ "(rsc)/./src/components/heading/styles.css":
/*!*******************************************!*\
  !*** ./src/components/heading/styles.css ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"884792364cd5\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvY29tcG9uZW50cy9oZWFkaW5nL3N0eWxlcy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIi9ob21lL2FiaGlqYWRoYXYvRG9jdW1lbnRzL2dpdC9hMXBoYS5naXRodWIuaW8vc3JjL2NvbXBvbmVudHMvaGVhZGluZy9zdHlsZXMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiODg0NzkyMzY0Y2Q1XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/components/heading/styles.css\n");

/***/ }),

/***/ "(rsc)/./src/components/heading/index.tsx":
/*!******************************************!*\
  !*** ./src/components/heading/index.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Heading: () => (/* binding */ Heading)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles.css */ \"(rsc)/./src/components/heading/styles.css\");\n\n\nfunction Heading(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n        className: \"heading\",\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/components/heading/index.tsx\",\n        lineNumber: 5,\n        columnNumber: 9\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvY29tcG9uZW50cy9oZWFkaW5nL2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNzQjtBQUVmLFNBQVNBLFFBQVFDLEtBQXFDO0lBQzVELHFCQUFPLDhEQUFDQztRQUFHQyxXQUFVO1FBQVcsR0FBR0YsS0FBSzs7Ozs7O0FBQ3pDIiwic291cmNlcyI6WyIvaG9tZS9hYmhpamFkaGF2L0RvY3VtZW50cy9naXQvYTFwaGEuZ2l0aHViLmlvL3NyYy9jb21wb25lbnRzL2hlYWRpbmcvaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR5cGUgQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgXCIuL3N0eWxlcy5jc3NcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIEhlYWRpbmcocHJvcHM6IENvbXBvbmVudFByb3BzV2l0aG91dFJlZjxcImgxXCI+KSB7XG5cdHJldHVybiA8aDEgY2xhc3NOYW1lPVwiaGVhZGluZ1wiIHsuLi5wcm9wc30gLz47XG59Il0sIm5hbWVzIjpbIkhlYWRpbmciLCJwcm9wcyIsImgxIiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/components/heading/index.tsx\n");

/***/ }),

/***/ "(rsc)/./src/mdx-components.tsx":
/*!********************************!*\
  !*** ./src/mdx-components.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMDXComponents: () => (/* binding */ useMDXComponents)\n/* harmony export */ });\n/* harmony import */ var _components_heading__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/components/heading */ \"(rsc)/./src/components/heading/index.tsx\");\n\nfunction useMDXComponents(components) {\n    return {\n        h1: _components_heading__WEBPACK_IMPORTED_MODULE_0__.Heading,\n        ...components\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbWR4LWNvbXBvbmVudHMudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBQytDO0FBRXhDLFNBQVNDLGlCQUFpQkMsVUFBeUI7SUFDeEQsT0FBTztRQUNMQyxJQUFJSCx3REFBT0E7UUFDWCxHQUFHRSxVQUFVO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvYWJoaWphZGhhdi9Eb2N1bWVudHMvZ2l0L2ExcGhhLmdpdGh1Yi5pby9zcmMvbWR4LWNvbXBvbmVudHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTURYQ29tcG9uZW50cyB9IGZyb20gXCJtZHgvdHlwZXNcIjtcbmltcG9ydCB7IEhlYWRpbmcgfSBmcm9tIFwiQC9jb21wb25lbnRzL2hlYWRpbmdcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZU1EWENvbXBvbmVudHMoY29tcG9uZW50czogTURYQ29tcG9uZW50cyk6IE1EWENvbXBvbmVudHMge1xuICByZXR1cm4ge1xuICAgIGgxOiBIZWFkaW5nLFxuICAgIC4uLmNvbXBvbmVudHMsXG4gIH07XG59XG4iXSwibmFtZXMiOlsiSGVhZGluZyIsInVzZU1EWENvbXBvbmVudHMiLCJjb21wb25lbnRzIiwiaDEiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/mdx-components.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/(posts)/implementing-consistent-hashing/page.mdx":
/*!******************************************************************!*\
  !*** ./src/app/(posts)/implementing-consistent-hashing/page.mdx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MDXContent),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_mdx_import_source_file__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-mdx-import-source-file */ \"(rsc)/./src/mdx-components.tsx\");\n\n\nconst metadata = {\n    title: \"Implementing Consistent Hashing in Python\",\n    publishDate: \"2024-03-07\",\n    categories: [\n        \"algorithms\",\n        \"system-design\"\n    ]\n};\nfunction _createMdxContent(props) {\n    const _components = {\n        code: \"code\",\n        h1: \"h1\",\n        h2: \"h2\",\n        li: \"li\",\n        ol: \"ol\",\n        p: \"p\",\n        pre: \"pre\",\n        strong: \"strong\",\n        ul: \"ul\",\n        ...(0,next_mdx_import_source_file__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n        ...props.components\n    };\n    return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h1, {\n                children: \"Implementing Consistent Hashing in Python\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 7,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Consistent hashing is a distributed hashing scheme that operates independently of the number of servers or objects in a distributed hash table. Let's implement it from scratch!\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 9,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Why Consistent Hashing?\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 11,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Traditional hash tables face a significant problem in distributed systems: when the number of slots (servers) changes, most keys need to be remapped. Consistent hashing solves this by ensuring that when a server is added or removed, only K/n keys need to be remapped (where K is the number of keys and n is the number of servers).\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 13,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Basic Implementation\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 15,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Here's a Python implementation of consistent hashing:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 17,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.pre, {\n                children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                    className: \"language-python\",\n                    children: \"import hashlib\\nfrom bisect import bisect\\nfrom typing import List, Optional\\n\\nclass ConsistentHash:\\n    def __init__(self, nodes: List[str] = None, replicas: int = 3):\\n        \\\"\\\"\\\"\\n        Initialize the hash ring.\\n        \\n        Args:\\n            nodes: List of node names to add to the ring\\n            replicas: Number of virtual nodes per real node\\n        \\\"\\\"\\\"\\n        self.replicas = replicas\\n        self.ring = {}  # hash -> node mapping\\n        self.sorted_keys = []  # Sorted list of hash values\\n        \\n        if nodes:\\n            for node in nodes:\\n                self.add_node(node)\\n    \\n    def _hash(self, key: str) -> int:\\n        \\\"\\\"\\\"Generate a hash value for a key.\\\"\\\"\\\"\\n        key_bytes = key.encode('utf-8')\\n        big_hash = hashlib.md5(key_bytes).hexdigest()\\n        return int(big_hash, 16)\\n    \\n    def add_node(self, node: str) -> None:\\n        \\\"\\\"\\\"Add a node to the hash ring.\\\"\\\"\\\"\\n        for i in range(self.replicas):\\n            virtual_node = f\\\"{node}:{i}\\\"\\n            hash_value = self._hash(virtual_node)\\n            self.ring[hash_value] = node\\n            self.sorted_keys.append(hash_value)\\n        \\n        self.sorted_keys.sort()\\n    \\n    def remove_node(self, node: str) -> None:\\n        \\\"\\\"\\\"Remove a node from the hash ring.\\\"\\\"\\\"\\n        for i in range(self.replicas):\\n            virtual_node = f\\\"{node}:{i}\\\"\\n            hash_value = self._hash(virtual_node)\\n            del self.ring[hash_value]\\n            self.sorted_keys.remove(hash_value)\\n    \\n    def get_node(self, key: str) -> Optional[str]:\\n        \\\"\\\"\\\"Get the node responsible for the given key.\\\"\\\"\\\"\\n        if not self.ring:\\n            return None\\n            \\n        hash_value = self._hash(key)\\n        idx = bisect(self.sorted_keys, hash_value)\\n        \\n        # Wrap around to the first node if we've gone past the end\\n        if idx == len(self.sorted_keys):\\n            idx = 0\\n            \\n        return self.ring[self.sorted_keys[idx]]\\n\"\n                }, undefined, false, {\n                    fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                    lineNumber: 19,\n                    columnNumber: 1\n                }, this)\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 19,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Using the Implementation\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 80,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Here's how to use our consistent hashing implementation:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 82,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.pre, {\n                children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                    className: \"language-python\",\n                    children: \"# Create a consistent hash ring with some nodes\\nnodes = ['server1', 'server2', 'server3']\\nch = ConsistentHash(nodes)\\n\\n# Map some keys to nodes\\nkeys = ['user1', 'user2', 'user3', 'user4', 'user5']\\nfor key in keys:\\n    node = ch.get_node(key)\\n    print(f\\\"Key '{key}' -> Node '{node}'\\\")\\n\\n# Add a new node\\nprint(\\\"\\\\nAdding server4...\\\")\\nch.add_node('server4')\\n\\n# Check where keys map to now\\nprint(\\\"\\\\nAfter adding server4:\\\")\\nfor key in keys:\\n    node = ch.get_node(key)\\n    print(f\\\"Key '{key}' -> Node '{node}'\\\")\\n\"\n                }, undefined, false, {\n                    fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                    lineNumber: 84,\n                    columnNumber: 1\n                }, this)\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 84,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Testing Distribution\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 106,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Let's write a function to test the distribution of keys:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 108,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.pre, {\n                children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                    className: \"language-python\",\n                    children: \"def test_distribution(num_keys: int = 10000):\\n    \\\"\\\"\\\"Test the distribution of keys across nodes.\\\"\\\"\\\"\\n    nodes = ['server1', 'server2', 'server3', 'server4']\\n    ch = ConsistentHash(nodes)\\n    \\n    # Generate test keys\\n    distribution = {node: 0 for node in nodes}\\n    for i in range(num_keys):\\n        key = f\\\"key{i}\\\"\\n        node = ch.get_node(key)\\n        distribution[node] += 1\\n    \\n    # Print distribution\\n    print(\\\"\\\\nKey distribution:\\\")\\n    for node, count in distribution.items():\\n        percentage = (count / num_keys) * 100\\n        print(f\\\"{node}: {count} keys ({percentage:.2f}%)\\\")\\n\\n# Run the test\\ntest_distribution()\\n\"\n                }, undefined, false, {\n                    fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                    lineNumber: 110,\n                    columnNumber: 1\n                }, this)\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 110,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Understanding the Implementation\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 133,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Key aspects of our implementation:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 135,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.ol, {\n                children: [\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: [\n                            \"\\n\",\n                            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                                children: [\n                                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.strong, {\n                                        children: \"Virtual Nodes\"\n                                    }, undefined, false, {\n                                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                        lineNumber: 137,\n                                        columnNumber: 4\n                                    }, this),\n                                    \": We create multiple virtual nodes for each real node to improve distribution.\"\n                                ]\n                            }, undefined, true, {\n                                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                lineNumber: 137,\n                                columnNumber: 4\n                            }, this),\n                            \"\\n\"\n                        ]\n                    }, undefined, true, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 137,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: [\n                            \"\\n\",\n                            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                                children: [\n                                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.strong, {\n                                        children: \"Hash Function\"\n                                    }, undefined, false, {\n                                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                        lineNumber: 139,\n                                        columnNumber: 4\n                                    }, this),\n                                    \": We use MD5 for consistent hashing. In production, you might want to use a different hash function.\"\n                                ]\n                            }, undefined, true, {\n                                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                lineNumber: 139,\n                                columnNumber: 4\n                            }, this),\n                            \"\\n\"\n                        ]\n                    }, undefined, true, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 139,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: [\n                            \"\\n\",\n                            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                                children: [\n                                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.strong, {\n                                        children: \"Ring Structure\"\n                                    }, undefined, false, {\n                                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                        lineNumber: 141,\n                                        columnNumber: 4\n                                    }, this),\n                                    \": We maintain a sorted list of hash values for efficient lookups.\"\n                                ]\n                            }, undefined, true, {\n                                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                lineNumber: 141,\n                                columnNumber: 4\n                            }, this),\n                            \"\\n\"\n                        ]\n                    }, undefined, true, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 141,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: [\n                            \"\\n\",\n                            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                                children: [\n                                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.strong, {\n                                        children: \"Binary Search\"\n                                    }, undefined, false, {\n                                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                        lineNumber: 143,\n                                        columnNumber: 4\n                                    }, this),\n                                    \": We use \",\n                                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                                        children: \"bisect\"\n                                    }, undefined, false, {\n                                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                        lineNumber: 143,\n                                        columnNumber: 30\n                                    }, this),\n                                    \" for efficient node lookup.\"\n                                ]\n                            }, undefined, true, {\n                                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                lineNumber: 143,\n                                columnNumber: 4\n                            }, this),\n                            \"\\n\"\n                        ]\n                    }, undefined, true, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 143,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\"\n                ]\n            }, undefined, true, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 137,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Performance Analysis\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 145,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"The time complexity of our operations:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 147,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.ul, {\n                children: [\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"Add node: O(R log R) where R is the number of replicas\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 148,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"Remove node: O(R log R)\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 149,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"Get node: O(log N) where N is the total number of nodes\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 150,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\"\n                ]\n            }, undefined, true, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 148,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Space complexity:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 152,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.ul, {\n                children: [\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"O(N * R) where N is the number of nodes and R is the number of replicas\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 153,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\"\n                ]\n            }, undefined, true, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 153,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Real-World Applications\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 155,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Consistent hashing is used in:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 157,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.ul, {\n                children: [\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"Distributed caches (e.g., Memcached)\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 158,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"Content Delivery Networks (CDNs)\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 159,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"Load balancers\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 160,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: \"Distributed databases\"\n                    }, undefined, false, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 161,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\"\n                ]\n            }, undefined, true, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 158,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Improvements\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 163,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Some possible improvements to this implementation:\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 165,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.ol, {\n                children: [\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: [\n                            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.strong, {\n                                children: \"Better Hash Function\"\n                            }, undefined, false, {\n                                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                lineNumber: 167,\n                                columnNumber: 4\n                            }, this),\n                            \":\"\n                        ]\n                    }, undefined, true, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 167,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\"\n                ]\n            }, undefined, true, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 167,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.pre, {\n                children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                    className: \"language-python\",\n                    children: \"def _hash(self, key: str) -> int:\\n    return int(hashlib.blake2b(key.encode()).hexdigest(), 16)\\n\"\n                }, undefined, false, {\n                    fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                    lineNumber: 168,\n                    columnNumber: 1\n                }, this)\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 168,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.ol, {\n                start: \"2\",\n                children: [\n                    \"\\n\",\n                    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.li, {\n                        children: [\n                            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.strong, {\n                                children: \"Weight-based Distribution\"\n                            }, undefined, false, {\n                                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                                lineNumber: 173,\n                                columnNumber: 4\n                            }, this),\n                            \":\"\n                        ]\n                    }, undefined, true, {\n                        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                        lineNumber: 173,\n                        columnNumber: 1\n                    }, this),\n                    \"\\n\"\n                ]\n            }, undefined, true, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 173,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.pre, {\n                children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.code, {\n                    className: \"language-python\",\n                    children: \"class WeightedConsistentHash(ConsistentHash):\\n    def __init__(self, nodes: dict[str, int], replicas: int = 3):\\n        \\\"\\\"\\\"nodes is a dict of node -> weight\\\"\\\"\\\"\\n        super().__init__([], replicas)\\n        for node, weight in nodes.items():\\n            self.add_node(node, weight)\\n\"\n                }, undefined, false, {\n                    fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                    lineNumber: 174,\n                    columnNumber: 1\n                }, this)\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 174,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.h2, {\n                children: \"Conclusion\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 183,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Consistent hashing is a powerful technique for distributed systems. This implementation provides a good starting point, but remember to consider your specific use case when adapting it.\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 185,\n                columnNumber: 1\n            }, this),\n            \"\\n\",\n            (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components.p, {\n                children: \"Stay tuned for more posts about distributed systems algorithms!\"\n            }, undefined, false, {\n                fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n                lineNumber: 187,\n                columnNumber: 1\n            }, this)\n        ]\n    }, undefined, true, {\n        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\",\n        lineNumber: 1,\n        columnNumber: 1\n    }, this);\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = {\n        ...(0,next_mdx_import_source_file__WEBPACK_IMPORTED_MODULE_1__.useMDXComponents)(),\n        ...props.components\n    };\n    return MDXLayout ? (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MDXLayout, {\n        ...props,\n        children: (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_createMdxContent, {\n            ...props\n        }, undefined, false, {\n            fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\"\n        }, this)\n    }, undefined, false, {\n        fileName: \"/home/abhijadhav/Documents/git/a1pha.github.io/src/app/(posts)/implementing-consistent-hashing/page.mdx\"\n    }, this) : _createMdxContent(props);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwLyhwb3N0cykvaW1wbGVtZW50aW5nLWNvbnNpc3RlbnQtaGFzaGluZy9wYWdlLm1keCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O01BQWFBLFdBQUFBO0lBQ1hDLE9BQU87SUFDUEMsYUFBYTtJQUNiQyxZQUFBQTtRQUFhO1FBQWM7S0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFHM0I7Ozs7Ozs7OzBCQUVGOzs7Ozs7OzswQkFFRzs7Ozs7Ozs7MEJBRUg7Ozs7Ozs7OzBCQUVHOzs7Ozs7OzswQkFFSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBK0RHOzs7Ozs7OzswQkFFSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBd0JHOzs7Ozs7OzswQkFFSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBeUJHOzs7Ozs7OzswQkFFSDs7Ozs7Ozs7Ozs7Ozs7OztrREFFSzs7Ozs7O29DQUFlO2lDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrREFFZjs7Ozs7O29DQUFlO2lDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrREFFZjs7Ozs7O29DQUFnQjtpQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0RBRWhCOzs7Ozs7b0NBQWU7b0NBQUE7a0RBQVM7Ozs7OztvQ0FBUTtpQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFFbEM7Ozs7Ozs7OzBCQUVIOzs7Ozs7Ozs7OztrQ0FDRTs7Ozs7Ozs7a0NBQ0E7Ozs7Ozs7O2tDQUNBOzs7Ozs7Ozs7Ozs7Ozs7MEJBRUY7Ozs7Ozs7Ozs7O2tDQUNFOzs7Ozs7Ozs7Ozs7Ozs7MEJBRUM7Ozs7Ozs7OzBCQUVIOzs7Ozs7Ozs7OztrQ0FDRTs7Ozs7Ozs7a0NBQ0E7Ozs7Ozs7O2tDQUNBOzs7Ozs7OztrQ0FDQTs7Ozs7Ozs7Ozs7Ozs7OzBCQUVDOzs7Ozs7OzswQkFFSDs7Ozs7Ozs7Ozs7OzswQ0FFSzs7Ozs7OzRCQUFzQjt5QkFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBDQU10Qjs7Ozs7OzRCQUEyQjt5QkFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQVU3Qjs7Ozs7Ozs7MEJBRUg7Ozs7Ozs7OzBCQUVBIiwic291cmNlcyI6WyIvaG9tZS9hYmhpamFkaGF2L0RvY3VtZW50cy9naXQvYTFwaGEuZ2l0aHViLmlvL3NyYy9hcHAvKHBvc3RzKS9pbXBsZW1lbnRpbmctY29uc2lzdGVudC1oYXNoaW5nL3BhZ2UubWR4Il0sIm5hbWVzIjpbIm1ldGFkYXRhIiwidGl0bGUiLCJwdWJsaXNoRGF0ZSIsImNhdGVnb3JpZXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/(posts)/implementing-consistent-hashing/page.mdx\n");

/***/ })

};
;